@inject HttpClient HttpClient

@if (Show)
{
    <div class="modal show" style="display:block">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                @if (_loading)
                {
                    <div class="modal-header">
                        @if (NewProvider)
                        {
                            <h4 class="modal-title">New Provider</h4>
                        }
                        else
                        {
                            <h4 class="modal-title">Provider @Provider?.Name</h4>
                        }
                    </div>

                    <div class="d-flex justify-content-center modal-body">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="modal-header">
                        @if (NewProvider)
                        {
                            <h4 class="modal-title">New Provider</h4>
                        }
                        else
                        {
                            <h4 class="modal-title">Provider @Provider?.Name</h4>
                        }

                        <button 
                            type="button"
                            class="close"
                            @onclick="Cancel">
                            &times;
                        </button>
                    </div>

                    <div class="modal-body">

                        <!-- Name -->
                        <div class="form-group row">
                            <label class="col-sm-2 col-form-label">Name</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" @bind="_name">
                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn"
                            @onclick="Cancel">
                            Cancel
                        </button>

                        <button
                            type="button"
                            class="btn btn-success"
                            @onclick="SaveChanges">
                            Save
                        </button>
                    </div>
                }

            </div>
        </div>
    </div>
}

@code {
    private bool _loading = false;

    [Parameter]
    public bool Show { get; set; }

    [Parameter]
    public bool NewProvider { get; set; }

    [Parameter]
    public Provider? Provider { get; set; }

    [Parameter]
    public Action? OnCancelProviderEdit { get; set; }

    [Parameter]
    public Action? OnProviderEditComplete { get; set; }

    private string _name = string.Empty;

    protected override void OnParametersSet()
    {
        _name = string.Empty;

        if (Provider is not null && NewProvider == false)
        {
            _name = Provider.Name;
        }
    }

    private void Cancel()
    {
        Show = false;
        OnCancelProviderEdit?.Invoke();
    }

    private async Task SaveChanges()
    {
        _loading = true;

        try
        {
            if (NewProvider)
            {
                NewProviderRequest request = new NewProviderRequest(_name);
                var result = await HttpClient.PostAsJsonAsync<NewProviderRequest>($"api/Providers", request);
                if (result.IsSuccessStatusCode)
                {
                    Show = false;
                    OnProviderEditComplete?.Invoke();
                }
            }
            else
            {
                UpdateProviderRequest request = new UpdateProviderRequest(Provider!.Id, _name);
                var result = await HttpClient.PutAsJsonAsync<UpdateProviderRequest>($"api/Providers", request);
                if (result.IsSuccessStatusCode)
                {
                    Show = false;
                    OnProviderEditComplete?.Invoke();
                }
            }
        }
        catch
        {

        }
        finally
        {
            _loading = false;
        }
    }
}
