@inject HttpClient HttpClient

@if (Show)
{
    <div class="modal show" style="display:block">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                @if (_loading)
                {
                    <div class="modal-header">
                        @if (NewOrder)
                        {
                            <h4 class="modal-title">New Order</h4>
                        }
                        else
                        {
                            <h4 class="modal-title">Order @Order?.Number</h4>
                        }
                    </div>

                    <div class="d-flex justify-content-center modal-body">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="modal-header">
                        @if (NewOrder)
                        {
                            <h4 class="modal-title">New Order</h4>
                        }
                        else
                        {
                            <h4 class="modal-title">Order @Order?.Number</h4>
                        }

                        <button
                            type="button"
                            class="close"
                            @onclick="Cancel">
                            &times;
                        </button>
                    </div>

                    <div class="modal-body">

                        <div class="vstack gap-2">

                            <!-- Number -->
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Number</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" @bind="_number">
                                </div>
                            </div>

                            <!-- Date -->
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Date</label>
                                <div class="col-sm-10">
                                    <input type="datetime-local" class="form-control" @bind="_date">
                                </div>
                            </div>

                            <!-- Provider -->
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Provider</label>
                                <div class="col-sm-10">
                                    <select class="form-select" @bind="_providerId">
                                        <option value="-1" disabled>Select provider...</option>
                                        @foreach (var provider in Providers)
                                        {
                                            <option value="@provider.Id">@provider.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <!-- Items -->
                            <div class="form-group row">
                                <table class="table table-striped">
                                    <thead>
                                        <tr class="fw-bold text-uppercase">
                                            <td scope="col">Name</td>
                                            <td scope="col">Quantity</td>
                                            <td scope="col">Unit</td>
                                            <td scope="col" />
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in _items)
                                        {
                                            <tr>
                                                <td scope="row">
                                                    <input type="text" class="form-control" @bind="@item.Name">
                                                </td>
                                                <td scope="row">
                                                    <input type="number" class="form-control" @bind="@item.Quantity">
                                                </td>
                                                <td scope="row">
                                                    <input type="text" class="form-control" @bind="@item.Unit">
                                                </td>
                                                <td scope="row">
                                                    <button class="btn btn-danger" @onclick="() => _items.Remove(item)">
                                                        Delete
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <td scope="row" colspan="4">
                                                <button class="btn btn-success" @onclick="() => _items.Add(new OrderItem())">
                                                    Add item
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>

                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn"
                            @onclick="Cancel">
                            Cancel
                        </button>

                        <button
                            type="button"
                            class="btn btn-success"
                            @onclick="SaveChanges">
                            Save
                        </button>
                    </div>
                }

            </div>
        </div>
    </div>
}

@code {
    private bool _loading = false;

    [Parameter]
    public bool Show { get; set; }

    [Parameter]
    public bool NewOrder { get; set; }

    [Parameter]
    public Order? Order { get; set; }

    [Parameter]
    public Action? OnCancelOrderEdit { get; set; }

    [Parameter]
    public Action? OnOrderEditComplete { get; set; }

    [Parameter]
    public IEnumerable<Provider> Providers { get; set; } = Enumerable.Empty<Provider>();

    private string _number = string.Empty;
    private DateTime _date = DateTime.UtcNow;
    private int _providerId = -1;
    private List<OrderItem> _items = new();

    protected override void OnParametersSet()
    {
        _number = string.Empty;
        _date = DateTime.UtcNow;
        _providerId = -1;
        _items = new();

        if (Order is not null && NewOrder == false)
        {
            _number = Order.Number;
            _date = Order.Date;
            _providerId = Order.Provider.Id;
            _items = Order.Items.ToList();
        }
    }

    private void Cancel()
    {
        Show = false;
        OnCancelOrderEdit?.Invoke();
    }

    private async Task SaveChanges()
    {
        _loading = true;

        try
        {
            if (NewOrder)
            {
                NewOrderRequest request = new NewOrderRequest(
                    _number, _date, _providerId,
                    _items.Select(i => new NewOrderRequestItem(i.Name, i.Quantity, i.Unit)));
                var result = await HttpClient.PostAsJsonAsync<NewOrderRequest>($"api/Orders", request);
                if (result.IsSuccessStatusCode)
                {
                    Show = false;
                    OnOrderEditComplete?.Invoke();
                }
            }
            else
            {
                UpdateOrderRequest request = new UpdateOrderRequest(
                    Order!.Id, _number, _date, _providerId,
                    _items.Select(i => new UpdateOrderRequestItem(i.Id, i.Name, i.Quantity, i.Unit)));
                var result = await HttpClient.PutAsJsonAsync<UpdateOrderRequest>($"api/Orders", request);
                if (result.IsSuccessStatusCode)
                {
                    Show = false;
                    OnOrderEditComplete?.Invoke();
                }
            }
        }
        catch
        {

        }
        finally
        {
            _loading = false;
        }
    }
}
